# Generated by Django 2.0.7 on 2018-07-19 02:47

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    replaces = [('database', '0001_initial'), ('database', '0002_auto_20180712_1058'), ('database', '0003_auto_20180712_1102'), ('database', '0004_column_standard_deviation'), ('database', '0005_auto_20180712_1130'), ('database', '0006_auto_20180712_1133'), ('database', '0007_auto_20180712_1239'), ('database', '0008_auto_20180712_1243'), ('database', '0009_auto_20180713_0001'), ('database', '0010_auto_20180716_0213'), ('database', '0011_auto_20180716_0214'), ('database', '0012_column_is_structured'), ('database', '0013_column_needs_index'), ('database', '0014_valuedistribution'), ('database', '0015_auto_20180717_0332'), ('database', '0016_auto_20180718_0226'), ('database', '0017_auto_20180718_0228')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('data_type', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColumnStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('column', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='database.Column')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('schema', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('number_of_rows', models.IntegerField(blank=True, db_index=True, null=True)),
                ('use_for_bi', models.BooleanField(default=False)),
                ('comments', models.ManyToManyField(blank=True, null=True, to='database.Comment')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='column',
            name='table',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='database.Table'),
        ),
        migrations.AddField(
            model_name='column',
            name='is_null',
            field=models.NullBooleanField(),
        ),
        migrations.AddField(
            model_name='column',
            name='max_length',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='column',
            name='maximum',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='column',
            name='minimum',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='column',
            name='standard_deviation',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True),
        ),
        migrations.AddField(
            model_name='column',
            name='has_duplicates',
            field=models.NullBooleanField(db_index=True, verbose_name='Does the column contain duplicates'),
        ),
        migrations.AddField(
            model_name='column',
            name='null_count',
            field=models.DecimalField(db_index=True, decimal_places=2, max_digits=11, null=True, verbose_name='Percentage of nulls'),
        ),
        migrations.AddField(
            model_name='column',
            name='unique_values',
            field=models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Number of unique values'),
        ),
        migrations.AlterModelOptions(
            name='column',
            options={'ordering': ['name']},
        ),
        migrations.AlterField(
            model_name='column',
            name='null_count',
            field=models.DecimalField(db_index=True, decimal_places=2, max_digits=11, null=True, verbose_name='Number of null values'),
        ),
        migrations.AddField(
            model_name='column',
            name='percentage_of_nulls',
            field=models.DecimalField(db_index=True, decimal_places=2, max_digits=11, null=True, verbose_name='Percentage of null values'),
        ),
        migrations.AddField(
            model_name='column',
            name='is_structured',
            field=models.NullBooleanField(db_index=True, verbose_name='Is well structured'),
        ),
        migrations.AddField(
            model_name='column',
            name='needs_index',
            field=models.NullBooleanField(db_index=True, verbose_name='Needs index'),
        ),
        migrations.CreateModel(
            name='ValueDistribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('value', models.TextField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_distributions', to='database.Column')),
            ],
            options={
                'ordering': ['value'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='column',
            name='comments',
            field=models.ManyToManyField(blank=True, null=True, to='database.Comment'),
        ),
    ]
